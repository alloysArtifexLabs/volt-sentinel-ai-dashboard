# -*- coding: utf-8 -*-
"""energy_dashboard1.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1IValPhQBwOlgqPFzT6smIRLZQHrgt-fi
"""

import streamlit as st
import pandas as pd
import plotly.express as px

# Load the enhanced dataset with AI anomaly detection
df = pd.read_csv("simulated_energy_data_with_ai.csv")
df['timestamp'] = pd.to_datetime(df['timestamp'])

st.set_page_config(page_title="Agentic AI - Energy Monitoring Dashboard", layout="wide")
st.title("‚ö° VoltSentinel: AI-Powered Energy Monitoring Dashboard")

# Sidebar Filters
st.sidebar.header("Filter Options")
device_type_filter = st.sidebar.multiselect("Select Device Type", options=df['device_type'].unique(), default=df['device_type'].unique())
ai_anomaly_only = st.sidebar.checkbox("Show AI-Detected Anomalies Only", value=False)

df_filtered = df[df['device_type'].isin(device_type_filter)]
if ai_anomaly_only:
    df_filtered = df_filtered[df_filtered['ai_anomaly_flag'] == 1]

# Main Metrics
total_usage = df_filtered['usage_kwh'].sum()
total_ai_anomalies = df_filtered['ai_anomaly_flag'].sum()

col1, col2 = st.columns(2)
col1.metric("üîã Total Energy Usage (kWh)", f"{total_usage:.2f}")
col2.metric("ü§ñ AI Anomalies Detected", total_ai_anomalies)

# Energy Usage Over Time
st.subheader("üìà Energy Usage Over Time")
fig_usage = px.line(df_filtered, x='timestamp', y='usage_kwh', color='device_type', title="Energy Usage by Device Type")
st.plotly_chart(fig_usage, use_container_width=True)

# AI Anomalies Overview
st.subheader("‚ö†Ô∏è AI-Based Anomaly Detection")
ai_anomaly_df = df_filtered[df_filtered['ai_anomaly_flag'] == 1]
if not ai_anomaly_df.empty:
    fig_ai_anomalies = px.scatter(ai_anomaly_df, x='timestamp', y='usage_kwh', color='device_type', title="AI-Detected Anomalies")
    st.plotly_chart(fig_ai_anomalies, use_container_width=True)
else:
    st.info("No AI-detected anomalies in the selected timeframe and devices.")

# Device-wise Summary
st.subheader("üìä Device-wise Summary")
dev_summary = df_filtered.groupby('device_type')[['usage_kwh']].sum().reset_index()
fig_device = px.bar(dev_summary, x='device_type', y='usage_kwh', title="Total Energy Usage per Device Type")
st.plotly_chart(fig_device, use_container_width=True)

# Footer
st.markdown("---")
st.caption("Developed by Alloys ‚Ä¢ Agentic AI for Energy Monitoring ‚Ä¢ 2025")